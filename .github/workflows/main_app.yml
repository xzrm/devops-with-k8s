name: Build and push the latest build to staging

on:
  push:
    branches:
      - 'aks-deploy-test'
    paths:
      - 'main app/**'
      - '.github/workflows/main_app.yml'

jobs:
  build_push_image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './main app' 

    steps:
      - uses: actions/checkout@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login, build and push to ACR
        uses: docker/login-action@v1.8.0
        with:
          registry: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - run: |
          cd ./main
          docker build . -t ${{ secrets.ACR_NAME }}/demo-string-gen:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}/demo-string-gen:${{ github.sha }}
          cd ..
          cd ./pingpong
          docker build . -t ${{ secrets.ACR_NAME }}/demo-pingpong-app:${{ github.sha }} 
          docker push ${{ secrets.ACR_NAME }}/demo-pingpong-app:${{ github.sha }}
          cd ..
      
      - name: Set the target AKS cluster
        uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: AKSClustermk
          resource-group: ResourceGroupDemo

      - uses: Azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ secrets.ACR_NAME }}
          container-registry-username: ${{ secrets.ACR_LOGIN }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: k8s-secret
          
      - uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            ./main app/manifest/postgres/postgres-secret.yaml
            ./main app/manifest/pingpong_app.yaml
            ./main app/manifest/configmap.yaml
            ./main app/manifest/main_app.yaml

          images: |
            acrmk.azurecr.io/demo-pingpong-app:${{ github.sha }}
            acrmk.azurecr.io/demo-string-gen:${{ github.sha }}
          imagepullsecrets: |
            k8s-secret
      
      - uses: Azure/setup-helm@v1
        with:
          version: v3.3.1

      - name: Add repo
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

      - name: Run Helm Deploy
        run: |
          helm upgrade nginx-ingress ingress-nginx/ingress-nginx \
            --install \
            --set controller.replicaCount=1 \
            --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux \
            --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux \
            --set controller.admissionWebhooks.patch.nodeSelector."beta\.kubernetes\.io/os"=linux

      - run: |
          kubectl apply -f ./manifest/ingress.yaml